{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\react course practice\\\\advanced forms practice\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  // const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameIsValid, setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouch, setEnteredNameTouch] = useState(false);\n  const nameInputChangedHandler = event => {\n    setEnteredName(event.target.value);\n  };\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouch(true);\n    if (enteredName.trim() === '') {\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n    console.log(enteredName);\n    // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue);\n\n    // nameInputRef.current.value = '' => don't manipulte the dom , not ideal\n    setEnteredName('');\n  };\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouch;\n  const nameInputClass = nameInputIsInValid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangedHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), nameInputIsInValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleInput, \"PvcLgMZUpnms0nDjIdX0KBNK908=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","enteredNameIsValid","setEnteredNameIsValid","enteredNameTouch","setEnteredNameTouch","nameInputChangedHandler","event","target","value","formSubmitHandler","preventDefault","trim","console","log","nameInputIsInValid","nameInputClass","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","_c","$RefreshReg$"],"sources":["D:/Web Development/react course practice/advanced forms practice/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  // const nameInputRef = useRef();\n  const [enteredName,setEnteredName] = useState('')\n  const [enteredNameIsValid,setEnteredNameIsValid] = useState(false);\n  const [enteredNameTouch,setEnteredNameTouch] = useState(false);\n\n  const nameInputChangedHandler = (event)=>{\n    setEnteredName(event.target.value);\n  }\n\n  const formSubmitHandler = (event) =>{\n    event.preventDefault();\n    \n    setEnteredNameTouch(true)\n\n    if(enteredName.trim() === ''){\n      setEnteredNameIsValid(false);\n      return;\n    }\n    setEnteredNameIsValid(true);\n\n    console.log(enteredName);\n    // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue);\n\n    // nameInputRef.current.value = '' => don't manipulte the dom , not ideal\n    setEnteredName('');\n  }\n\n  const nameInputIsInValid = !enteredNameIsValid && enteredNameTouch\n\n  const nameInputClass = nameInputIsInValid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClass}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name' onChange={nameInputChangedHandler} value={enteredName}/>\n        {nameInputIsInValid && <p className=\"error-text\">Name must not be empty</p>}\n        </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B;EACA,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACjD,MAAM,CAACQ,kBAAkB,EAACC,qBAAqB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAClE,MAAM,CAACU,gBAAgB,EAACC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE9D,MAAMY,uBAAuB,GAAIC,KAAK,IAAG;IACvCN,cAAc,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,iBAAiB,GAAIH,KAAK,IAAI;IAClCA,KAAK,CAACI,cAAc,CAAC,CAAC;IAEtBN,mBAAmB,CAAC,IAAI,CAAC;IAEzB,IAAGL,WAAW,CAACY,IAAI,CAAC,CAAC,KAAK,EAAE,EAAC;MAC3BT,qBAAqB,CAAC,KAAK,CAAC;MAC5B;IACF;IACAA,qBAAqB,CAAC,IAAI,CAAC;IAE3BU,OAAO,CAACC,GAAG,CAACd,WAAW,CAAC;IACxB;IACA;;IAEA;IACAC,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMc,kBAAkB,GAAG,CAACb,kBAAkB,IAAIE,gBAAgB;EAElE,MAAMY,cAAc,GAAGD,kBAAkB,GAAG,sBAAsB,GAAG,cAAc;EAEnF,oBACEnB,OAAA;IAAMqB,QAAQ,EAAEP,iBAAkB;IAAAQ,QAAA,gBAChCtB,OAAA;MAAKuB,SAAS,EAAEH,cAAe;MAAAE,QAAA,gBAC7BtB,OAAA;QAAOwB,OAAO,EAAC,MAAM;QAAAF,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvC5B,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,MAAM;QAACC,QAAQ,EAAErB,uBAAwB;QAACG,KAAK,EAAET;MAAY;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EACpFT,kBAAkB,iBAAInB,OAAA;QAAGuB,SAAS,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAsB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC,eACR5B,OAAA;MAAKuB,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BtB,OAAA;QAAAsB,QAAA,EAAQ;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACzB,EAAA,CA7CIF,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AA+CjB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}