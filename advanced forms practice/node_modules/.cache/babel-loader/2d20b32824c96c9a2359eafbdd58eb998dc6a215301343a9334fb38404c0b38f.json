{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\react course practice\\\\advanced forms practice\\\\src\\\\components\\\\BasicForm.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicForm = props => {\n  _s();\n  const isNotEmpty = value => value.trim() !== \"\";\n  const isEmail = value => value.includes(\"@\");\n  const {\n    value: enteredFirstName,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredLastName,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName\n  } = useInput(isNotEmpty);\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(isEmail);\n  let formIsValid = false;\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (!firstNameIsValid || !lastNameIsValid || !emailIsValid) {\n      return;\n    }\n    console.log(enteredFirstName);\n    console.log(enteredLastName);\n    console.log(enteredEmail);\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n  const firstNameClasses = firstNameHasError ? \"form-control invalid\" : \"form-control\";\n  const lastNameClasses = lastNameHasError ? \"form-control invalid\" : \"form-control\";\n  const emailClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: firstNameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler,\n          value: enteredFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"First Name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler,\n          value: enteredLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), lastNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"last Name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"Bg528af+K0Qlsblm0khQyK3budo=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInput","jsxDEV","_jsxDEV","BasicForm","props","_s","isNotEmpty","value","trim","isEmail","includes","enteredFirstName","isValid","firstNameIsValid","hasError","firstNameHasError","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","reset","resetFirstName","enteredLastName","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","enteredEmail","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","formIsValid","formSubmitHandler","event","preventDefault","console","log","firstNameClasses","lastNameClasses","emailClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["D:/Web Development/react course practice/advanced forms practice/src/components/BasicForm.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst BasicForm = (props) => {\n  const isNotEmpty = (value) => value.trim() !== \"\"\n  const isEmail = (value) => value.includes(\"@\")\n\n  const {\n    value: enteredFirstName,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: enteredLastName,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName,\n  } = useInput(isNotEmpty);\n\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput(isEmail);\n\n  let formIsValid = false;\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    if (!firstNameIsValid || !lastNameIsValid || !emailIsValid) {\n      return;\n    }\n\n    console.log(enteredFirstName);\n    console.log(enteredLastName);\n    console.log(enteredEmail);\n\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n\n  const firstNameClasses = firstNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const lastNameClasses = lastNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailClasses = emailHasError ? \"form-control invalid\" : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={firstNameClasses}>\n        <div className=\"form-control\">\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n            value={enteredFirstName}\n          />\n          {firstNameHasError && (\n            <p className=\"error-text\">First Name must not be empty.</p>\n          )}\n        </div>\n        <div className={lastNameClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n            value={enteredLastName}\n          />\n          {lastNameHasError && (\n            <p className=\"error-text\">last Name must not be empty.</p>\n          )}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailHasError && (\n          <p className=\"error-text\">Email must not be empty.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}