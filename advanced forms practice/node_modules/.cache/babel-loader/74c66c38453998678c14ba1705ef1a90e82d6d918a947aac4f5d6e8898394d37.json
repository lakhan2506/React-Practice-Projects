{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\react course practice\\\\advanced forms practice\\\\src\\\\components\\\\BasicForm.js\",\n  _s = $RefreshSig$();\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BasicForm = props => {\n  _s();\n  const {\n    value: enteredFirstName,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: enteredSecondName,\n    isValid: secondNameIsValid,\n    hasError: secondNameHasError,\n    valueChangeHandler: secondNameChangeHandler,\n    inputBlurHandler: secondNameBlurHandler,\n    reset: resetSecondName\n  } = useInput(value => value.trim() !== \"\");\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail\n  } = useInput(value => value.includes('@'));\n  let formIsValid = false;\n  if (firstNameIsValid && secondNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (!firstNameIsValid || !secondNameIsValid || !emailIsValid) {\n      return;\n    }\n    console.log(enteredFirstName);\n    console.log(enteredSecondName);\n    console.log(enteredEmail);\n    resetFirstName();\n    resetSecondName();\n    resetEmail();\n  };\n  const firstNameClasses = firstNameHasError ? 'form-control invalid' : 'form-control';\n  const secondNameClasses = secondNameHasError ? 'form-control invalid' : 'form-control';\n  const emailClasses = emailHasError ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: firstNameClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), firstNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"First Name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: secondNameClasses,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: secondNameChangeHandler,\n          onBlur: secondNameBlurHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), secondNameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Second Name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), emailHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicForm, \"d8+sg/Iu3xMe9YXuXirvnNXnWF4=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n_c = BasicForm;\nexport default BasicForm;\nvar _c;\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInput","jsxDEV","_jsxDEV","BasicForm","props","_s","value","enteredFirstName","isValid","firstNameIsValid","hasError","firstNameHasError","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","reset","resetFirstName","trim","enteredSecondName","secondNameIsValid","secondNameHasError","secondNameChangeHandler","secondNameBlurHandler","resetSecondName","enteredEmail","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","includes","formIsValid","formSubmitHandler","event","preventDefault","console","log","firstNameClasses","secondNameClasses","emailClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["D:/Web Development/react course practice/advanced forms practice/src/components/BasicForm.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\n\nconst BasicForm = (props) => {\n  const {\n    value: enteredFirstName,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler:firstNameBlurHandler,\n    reset: resetFirstName\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredSecondName,\n    isValid: secondNameIsValid,\n    hasError: secondNameHasError,\n    valueChangeHandler: secondNameChangeHandler,\n    inputBlurHandler:secondNameBlurHandler,\n    reset: resetSecondName\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler:emailBlurHandler,\n    reset: resetEmail\n  } = useInput((value) => value.includes('@'));\n\n  let formIsValid = false;\n  if(firstNameIsValid && secondNameIsValid && emailIsValid){\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = event =>{\n    event.preventDefault();\n\n    if(!firstNameIsValid || !secondNameIsValid || !emailIsValid){\n      return;\n    }\n\n    console.log(enteredFirstName)\n    console.log(enteredSecondName)\n    console.log(enteredEmail)\n\n    resetFirstName();\n    resetSecondName();\n    resetEmail();\n  }\n\n  const firstNameClasses = firstNameHasError\n    ? 'form-control invalid'\n    : 'form-control';\n\n    const secondNameClasses = secondNameHasError\n    ? 'form-control invalid'\n    : 'form-control';\n\n    const emailClasses = emailHasError\n    ? 'form-control invalid'\n    : 'form-control';\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={firstNameClasses}>\n        <div className=\"form-control\">\n          <label htmlFor=\"name\">First Name</label>\n          <input type=\"text\" id=\"name\" onChange={firstNameChangeHandler} onBlur={firstNameBlurHandler}/>\n          {firstNameHasError && (\n            <p className='error-text'>First Name must not be empty.</p>\n          )}\n        </div>\n        <div className={secondNameClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input type=\"text\" id=\"name\" onChange={secondNameChangeHandler} onBlur={secondNameBlurHandler}/>\n          {secondNameHasError && (\n            <p className='error-text'>Second Name must not be empty.</p>\n          )}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input type=\"text\" id=\"name\" onChange={emailChangeHandler} onBlur={emailBlurHandler}/>\n        {emailHasError && (\n          <p className='error-text'>Email must not be empty.</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}