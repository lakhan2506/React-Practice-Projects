{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://redux-database-37be3-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed.');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      console.error('Error sending cart data:', error);\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","sendCartData","cart","dispatch","showNotification","status","title","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","console"],"sources":["D:/Web Development/react course practice/Redux advance/src/components/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\r\n\r\nexport const sendCartData =(cart)=>{\r\n    return async (dispatch)=>{\r\n      dispatch(\r\n        uiActions.showNotification({\r\n          status: 'pending',\r\n          title: 'Sending...',\r\n          message: 'Sending cart data!',\r\n        })\r\n      );\r\n      const sendRequest = async ()=>{\r\n        const response = await fetch(\r\n          'https://redux-database-37be3-default-rtdb.firebaseio.com/cart.json',\r\n          {\r\n            method: 'PUT',\r\n            body: JSON.stringify(cart),\r\n          }\r\n        );\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('Sending cart data failed.');\r\n        }\r\n      }\r\n      try{\r\n        await sendRequest();\r\n  \r\n        dispatch(\r\n          uiActions.showNotification({\r\n            status: 'success',\r\n            title: 'Success!',\r\n            message: 'Sent cart data successfully!',\r\n          })\r\n        );\r\n      }catch(error){\r\n        console.error('Error sending cart data:', error);\r\n          dispatch(\r\n            uiActions.showNotification({\r\n              status: 'error',\r\n              title: 'Error!',\r\n              message: 'Sending cart data failed!',\r\n            })\r\n          );\r\n      }\r\n    }\r\n  }"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,YAAY,GAAGC,IAAI,IAAG;EAC/B,OAAO,MAAOC,QAAQ,IAAG;IACvBA,QAAQ,CACNH,SAAS,CAACI,gBAAgB,CAAC;MACzBC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IACD,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAU;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oEAAoE,EACpE;QACEC,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,IAAI;MAC3B,CACF,CAAC;MAED,IAAI,CAACO,QAAQ,CAACM,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;IACF,CAAC;IACD,IAAG;MACD,MAAMR,WAAW,CAAC,CAAC;MAEnBL,QAAQ,CACNH,SAAS,CAACI,gBAAgB,CAAC;QACzBC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH,CAAC,QAAMU,KAAK,EAAC;MACXC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAC9Cd,QAAQ,CACNH,SAAS,CAACI,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACL;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}