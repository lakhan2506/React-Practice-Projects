{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\react course practice\\\\09-time-to-practice-starting-code\\\\src\\\\components\\\\quotes\\\\QuoteList.js\",\n  _s = $RefreshSig$();\nimport { Fragment } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\nconst QuoteList = props => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n  const changeSortingHandler = () => {\n    navigate(\"/quotes?sort=\" + (isSortingAscending ? 'desc' : 'asc'));\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sorting,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: changeSortingHandler,\n        children: [\"Sort \", isSortingAscending ? \"Descending\" : \"Ascending\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: sortedQuotes.map(quote => /*#__PURE__*/_jsxDEV(QuoteItem, {\n        id: quote.id,\n        author: quote.author,\n        text: quote.text\n      }, quote.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteList, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = QuoteList;\nexport default QuoteList;\nvar _c;\n$RefreshReg$(_c, \"QuoteList\");","map":{"version":3,"names":["Fragment","useNavigate","useLocation","QuoteItem","classes","jsxDEV","_jsxDEV","sortQuotes","quotes","ascending","sort","quoteA","quoteB","id","QuoteList","props","_s","navigate","location","queryParams","URLSearchParams","search","isSortingAscending","get","sortedQuotes","changeSortingHandler","children","className","sorting","onClick","fileName","_jsxFileName","lineNumber","columnNumber","list","map","quote","author","text","_c","$RefreshReg$"],"sources":["D:/Web Development/react course practice/09-time-to-practice-starting-code/src/components/quotes/QuoteList.js"],"sourcesContent":["import { Fragment } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending)=>{\n  return quotes.sort((quoteA,quoteB)=>\n    {if(ascending){\n      return quoteA.id> quoteB.id ? 1:-1;\n    }else{\n      return quoteA.id< quoteB.id ? 1 : -1;\n    }}\n  )\n}\n\nconst QuoteList = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending)\n\n  const changeSortingHandler = () => {\n    navigate(\"/quotes?sort=\" + (isSortingAscending ? 'desc':'asc'));\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAE3D,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,OAAO,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,UAAU,GAAGA,CAACC,MAAM,EAAEC,SAAS,KAAG;EACtC,OAAOD,MAAM,CAACE,IAAI,CAAC,CAACC,MAAM,EAACC,MAAM,KAC/B;IAAC,IAAGH,SAAS,EAAC;MACZ,OAAOE,MAAM,CAACE,EAAE,GAAED,MAAM,CAACC,EAAE,GAAG,CAAC,GAAC,CAAC,CAAC;IACpC,CAAC,MAAI;MACH,OAAOF,MAAM,CAACE,EAAE,GAAED,MAAM,CAACC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACtC;EAAC,CACH,CAAC;AACH,CAAC;AAED,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE9B,MAAMiB,WAAW,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EAExD,MAAMC,kBAAkB,GAAGH,WAAW,CAACI,GAAG,CAAC,MAAM,CAAC,KAAK,KAAK;EAE5D,MAAMC,YAAY,GAAGjB,UAAU,CAACQ,KAAK,CAACP,MAAM,EAAEc,kBAAkB,CAAC;EAEjE,MAAMG,oBAAoB,GAAGA,CAAA,KAAM;IACjCR,QAAQ,CAAC,eAAe,IAAIK,kBAAkB,GAAG,MAAM,GAAC,KAAK,CAAC,CAAC;EACjE,CAAC;EAED,oBACEhB,OAAA,CAACN,QAAQ;IAAA0B,QAAA,gBACPpB,OAAA;MAAKqB,SAAS,EAAEvB,OAAO,CAACwB,OAAQ;MAAAF,QAAA,eAC9BpB,OAAA;QAAQuB,OAAO,EAAEJ,oBAAqB;QAAAC,QAAA,GAAC,OAChC,EAACJ,kBAAkB,GAAG,YAAY,GAAG,WAAW;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACN3B,OAAA;MAAIqB,SAAS,EAAEvB,OAAO,CAAC8B,IAAK;MAAAR,QAAA,EACzBF,YAAY,CAACW,GAAG,CAAEC,KAAK,iBACtB9B,OAAA,CAACH,SAAS;QAERU,EAAE,EAAEuB,KAAK,CAACvB,EAAG;QACbwB,MAAM,EAAED,KAAK,CAACC,MAAO;QACrBC,IAAI,EAAEF,KAAK,CAACE;MAAK,GAHZF,KAAK,CAACvB,EAAE;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAId,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEf,CAAC;AAACjB,EAAA,CAjCIF,SAAS;EAAA,QACIb,WAAW,EACXC,WAAW;AAAA;AAAAqC,EAAA,GAFxBzB,SAAS;AAmCf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}