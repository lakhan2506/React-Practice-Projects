{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\react course practice\\\\09-time-to-practice-starting-code\\\\src\\\\pages\\\\QuoteDetail.js\",\n  _s = $RefreshSig$();\nimport { Outlet, useParams } from \"react-router-dom\";\nimport { Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: 'q1',\n  author: 'Max',\n  text: 'Learning Rect is fun!'\n}, {\n  id: 'q2',\n  author: 'Rohit',\n  text: 'Learning Rect is greate!'\n}];\nconst QuoteDetail = () => {\n  _s();\n  const params = useParams();\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n  if (!quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 14\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = QuoteDetail;\nexport default QuoteDetail;\nvar _c;\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"names":["Outlet","useParams","Fragment","jsxDEV","_jsxDEV","DUMMY_QUOTES","id","author","text","QuoteDetail","_s","params","quote","find","quoteId","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Web Development/react course practice/09-time-to-practice-starting-code/src/pages/QuoteDetail.js"],"sourcesContent":["import { Outlet,useParams } from \"react-router-dom\";\r\nimport { Fragment } from \"react\";\r\n\r\nconst DUMMY_QUOTES=[\r\n  {id:'q1', author:'Max',text:'Learning Rect is fun!'},\r\n  {id:'q2', author:'Rohit',text:'Learning Rect is greate!'},\r\n]\r\n\r\nconst QuoteDetail = () => {\r\n    const params = useParams();\r\n    const quote = DUMMY_QUOTES.find(quote=> quote.id === params.quoteId);\r\n    \r\n    if(!quote){\r\n      return <p>No quote found!</p>;\r\n    }\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <Outlet />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"mappings":";;AAAA,SAASA,MAAM,EAACC,SAAS,QAAQ,kBAAkB;AACnD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,YAAY,GAAC,CACjB;EAACC,EAAE,EAAC,IAAI;EAAEC,MAAM,EAAC,KAAK;EAACC,IAAI,EAAC;AAAuB,CAAC,EACpD;EAACF,EAAE,EAAC,IAAI;EAAEC,MAAM,EAAC,OAAO;EAACC,IAAI,EAAC;AAA0B,CAAC,CAC1D;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,MAAM,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAMW,KAAK,GAAGP,YAAY,CAACQ,IAAI,CAACD,KAAK,IAAGA,KAAK,CAACN,EAAE,KAAKK,MAAM,CAACG,OAAO,CAAC;EAEpE,IAAG,CAACF,KAAK,EAAC;IACR,oBAAOR,OAAA;MAAAW,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC/B;EAEF,oBACEf,OAAA,CAACF,QAAQ;IAAAa,QAAA,eAEPX,OAAA,CAACJ,MAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEf,CAAC;AAACT,EAAA,CAdID,WAAW;EAAA,QACER,SAAS;AAAA;AAAAmB,EAAA,GADtBX,WAAW;AAgBjB,eAAeA,WAAW;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}